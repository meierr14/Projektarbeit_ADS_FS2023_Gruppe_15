import requests
import pandas
import json


# testing with OpenLigaDB API

# Alle Spieltage der UEFA Championsleague 22/23
request1 = f'https://api.openligadb.de/getmatchdata/bl1/2022/'
# Informationen über ein bestimmtes Spiel
request2 = f'https://api.openligadb.de/getavailableteams/bl1/2022'
request3 = f'https://api.openligadb.de/getbltable/bl1/2022'

response = requests.get(url=request1)
response.raise_for_status

data = response.json()
new_data = []

# öffnet oder erstellt ein JSON File und speichert das Ergebniss des API calls  
with open(f"./APIs/JSONData/ganze_saison.json", "w") as file: 
    for row in data:
        if row['matchIsFinished']:
            new_data.append(row)
    json.dump(new_data, file, indent=4)


# Erstellt ein Datenset mit den Daten des JSON Files in Form einer Tabelle
df = pandas.read_json(f'./APIs/JSONData/ganze_saison.json')

# Entfernt Spalten die nicht benötigt werden
df = df.drop(columns=["leagueId", "timeZoneID", "leagueShortcut", "lastUpdateDateTime", "location", "numberOfViewers"], axis=1)
df = df.loc[df['matchIsFinished'] == True]

# Vorbereitung von benötigten Listen
days = []
home_team = []
guest_team = []

# Iteration durch alle Datenreihen + hinzufügen in den Listen
for index, row in df.iterrows():
    days.append(row['matchDateTime'])
    home_team.append(row['team1']['teamName'])
    guest_team.append(row['team2']['teamName'])


results = df['matchResults'][0]
score_team_home = results[0]['pointsTeam1']
score_team_guest = results[0]['pointsTeam2']


# Alle Manschaften dieser Saison
response2 = requests.get(url=request2)
response2.raise_for_status

data2 = response2.json()

# öffnet oder erstellt ein JSON File und speichert das Ergebniss des API calls  
with open(f"./APIs/JSONData/mannschaften.json", "w") as file:
    json.dump(data2, file, indent=4)

# Tabelle der der aktuellen Saison
response3 = requests.get(url=request3)
response3.raise_for_status

data2 = response3.json()

# öffnet oder erstellt ein JSON File und speichert das Ergebniss des API calls  
with open(f"./APIs/JSONData/tabelle.json", "w") as file:
    json.dump(data2, file, indent=4)

